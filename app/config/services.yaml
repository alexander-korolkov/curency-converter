# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            Symfony\Contracts\Cache\CacheInterface $cache: '@cache.app'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Provider\CurrateProvider:
        arguments:
            $retrieveDataService: '@App\Service\RetrieveDataService'
            $apiKey: '%env(CURRATE_API_KEY)%'
            $baseUrl: '%env(CURRATE_API_URL)%'
            $cache: '@cache.app'

    App\Service\CurrencyRateFetcherService:
        arguments:
            $rateProvider: '@App\Provider\CurrateProvider'

    App\Service\CurrenciesListFetcherService:
        arguments:
            $listProvider: '@App\Provider\CurrateProvider'

    App\Service\RetrieveDataService:
        arguments:
            $client: '@http_client'

    App\Validator\Constraints\IsValidCurrencyValidator:
        arguments:
            $currenciesListFetcherService: '@App\Service\CurrenciesListFetcherService'

    App\DependencyInjection\Compiler\CacheWarmupPass:
        tags:
            - { name: compiler.pass, priority: 1000 }
